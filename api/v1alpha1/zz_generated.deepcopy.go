// +build !ignore_autogenerated

/*


Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabase) DeepCopyInto(out *PostgresDatabase) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabase.
func (in *PostgresDatabase) DeepCopy() *PostgresDatabase {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabase)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgresDatabase) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseList) DeepCopyInto(out *PostgresDatabaseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PostgresDatabase, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseList.
func (in *PostgresDatabaseList) DeepCopy() *PostgresDatabaseList {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgresDatabaseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpec) DeepCopyInto(out *PostgresDatabaseSpec) {
	*out = *in
	out.Definition = in.Definition
	in.Security.DeepCopyInto(&out.Security)
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]PostgresDatabaseSpecParameter, len(*in))
		copy(*out, *in)
	}
	if in.Schemas != nil {
		in, out := &in.Schemas, &out.Schemas
		*out = make([]PostgresDatabaseSpecSchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpec.
func (in *PostgresDatabaseSpec) DeepCopy() *PostgresDatabaseSpec {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecDefinition) DeepCopyInto(out *PostgresDatabaseSpecDefinition) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecDefinition.
func (in *PostgresDatabaseSpecDefinition) DeepCopy() *PostgresDatabaseSpecDefinition {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecFunctionsSecurityPrivileges) DeepCopyInto(out *PostgresDatabaseSpecFunctionsSecurityPrivileges) {
	*out = *in
	if in.Grantees != nil {
		in, out := &in.Grantees, &out.Grantees
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecFunctionsSecurityPrivileges.
func (in *PostgresDatabaseSpecFunctionsSecurityPrivileges) DeepCopy() *PostgresDatabaseSpecFunctionsSecurityPrivileges {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecFunctionsSecurityPrivileges)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecParameter) DeepCopyInto(out *PostgresDatabaseSpecParameter) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecParameter.
func (in *PostgresDatabaseSpecParameter) DeepCopy() *PostgresDatabaseSpecParameter {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecSchema) DeepCopyInto(out *PostgresDatabaseSpecSchema) {
	*out = *in
	in.Security.DeepCopyInto(&out.Security)
	in.DefaultPrivileges.DeepCopyInto(&out.DefaultPrivileges)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecSchema.
func (in *PostgresDatabaseSpecSchema) DeepCopy() *PostgresDatabaseSpecSchema {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecSchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecSchemaDefaultPrivileges) DeepCopyInto(out *PostgresDatabaseSpecSchemaDefaultPrivileges) {
	*out = *in
	if in.Tables != nil {
		in, out := &in.Tables, &out.Tables
		*out = make([]PostgresDatabaseSpecTablesSecurityPrivileges, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sequences != nil {
		in, out := &in.Sequences, &out.Sequences
		*out = make([]PostgresDatabaseSpecSequenceSecurityPrivileges, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Functions != nil {
		in, out := &in.Functions, &out.Functions
		*out = make([]PostgresDatabaseSpecFunctionsSecurityPrivileges, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]PostgresDatabaseSpecTypesSecurityPrivileges, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecSchemaDefaultPrivileges.
func (in *PostgresDatabaseSpecSchemaDefaultPrivileges) DeepCopy() *PostgresDatabaseSpecSchemaDefaultPrivileges {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecSchemaDefaultPrivileges)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecSchemaSecurity) DeepCopyInto(out *PostgresDatabaseSpecSchemaSecurity) {
	*out = *in
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]PostgresDatabaseSpecSchemaSecurityPrivileges, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityLabels != nil {
		in, out := &in.SecurityLabels, &out.SecurityLabels
		*out = make([]PostgresDatabaseSpecSecurityLabels, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecSchemaSecurity.
func (in *PostgresDatabaseSpecSchemaSecurity) DeepCopy() *PostgresDatabaseSpecSchemaSecurity {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecSchemaSecurity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecSchemaSecurityPrivileges) DeepCopyInto(out *PostgresDatabaseSpecSchemaSecurityPrivileges) {
	*out = *in
	if in.Grantees != nil {
		in, out := &in.Grantees, &out.Grantees
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecSchemaSecurityPrivileges.
func (in *PostgresDatabaseSpecSchemaSecurityPrivileges) DeepCopy() *PostgresDatabaseSpecSchemaSecurityPrivileges {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecSchemaSecurityPrivileges)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecSecurity) DeepCopyInto(out *PostgresDatabaseSpecSecurity) {
	*out = *in
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]PostgresDatabaseSpecSecurityPrivileges, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityLabels != nil {
		in, out := &in.SecurityLabels, &out.SecurityLabels
		*out = make([]PostgresDatabaseSpecSecurityLabels, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecSecurity.
func (in *PostgresDatabaseSpecSecurity) DeepCopy() *PostgresDatabaseSpecSecurity {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecSecurity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecSecurityLabels) DeepCopyInto(out *PostgresDatabaseSpecSecurityLabels) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecSecurityLabels.
func (in *PostgresDatabaseSpecSecurityLabels) DeepCopy() *PostgresDatabaseSpecSecurityLabels {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecSecurityLabels)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecSecurityPrivileges) DeepCopyInto(out *PostgresDatabaseSpecSecurityPrivileges) {
	*out = *in
	if in.Grantees != nil {
		in, out := &in.Grantees, &out.Grantees
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecSecurityPrivileges.
func (in *PostgresDatabaseSpecSecurityPrivileges) DeepCopy() *PostgresDatabaseSpecSecurityPrivileges {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecSecurityPrivileges)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecSequenceSecurityPrivileges) DeepCopyInto(out *PostgresDatabaseSpecSequenceSecurityPrivileges) {
	*out = *in
	if in.Grantees != nil {
		in, out := &in.Grantees, &out.Grantees
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecSequenceSecurityPrivileges.
func (in *PostgresDatabaseSpecSequenceSecurityPrivileges) DeepCopy() *PostgresDatabaseSpecSequenceSecurityPrivileges {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecSequenceSecurityPrivileges)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecTablesSecurityPrivileges) DeepCopyInto(out *PostgresDatabaseSpecTablesSecurityPrivileges) {
	*out = *in
	if in.Grantees != nil {
		in, out := &in.Grantees, &out.Grantees
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecTablesSecurityPrivileges.
func (in *PostgresDatabaseSpecTablesSecurityPrivileges) DeepCopy() *PostgresDatabaseSpecTablesSecurityPrivileges {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecTablesSecurityPrivileges)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseSpecTypesSecurityPrivileges) DeepCopyInto(out *PostgresDatabaseSpecTypesSecurityPrivileges) {
	*out = *in
	if in.Grantees != nil {
		in, out := &in.Grantees, &out.Grantees
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseSpecTypesSecurityPrivileges.
func (in *PostgresDatabaseSpecTypesSecurityPrivileges) DeepCopy() *PostgresDatabaseSpecTypesSecurityPrivileges {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseSpecTypesSecurityPrivileges)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresDatabaseStatus) DeepCopyInto(out *PostgresDatabaseStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresDatabaseStatus.
func (in *PostgresDatabaseStatus) DeepCopy() *PostgresDatabaseStatus {
	if in == nil {
		return nil
	}
	out := new(PostgresDatabaseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRole) DeepCopyInto(out *PostgresRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRole.
func (in *PostgresRole) DeepCopy() *PostgresRole {
	if in == nil {
		return nil
	}
	out := new(PostgresRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgresRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleList) DeepCopyInto(out *PostgresRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PostgresRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleList.
func (in *PostgresRoleList) DeepCopy() *PostgresRoleList {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PostgresRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleSpec) DeepCopyInto(out *PostgresRoleSpec) {
	*out = *in
	out.Privileges = in.Privileges
	if in.Membership != nil {
		in, out := &in.Membership, &out.Membership
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make([]PostgresRoleSpecParameter, len(*in))
		copy(*out, *in)
	}
	in.Security.DeepCopyInto(&out.Security)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleSpec.
func (in *PostgresRoleSpec) DeepCopy() *PostgresRoleSpec {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleSpecParameter) DeepCopyInto(out *PostgresRoleSpecParameter) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleSpecParameter.
func (in *PostgresRoleSpecParameter) DeepCopy() *PostgresRoleSpecParameter {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleSpecParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleSpecPrivileges) DeepCopyInto(out *PostgresRoleSpecPrivileges) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleSpecPrivileges.
func (in *PostgresRoleSpecPrivileges) DeepCopy() *PostgresRoleSpecPrivileges {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleSpecPrivileges)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleSpecSecurity) DeepCopyInto(out *PostgresRoleSpecSecurity) {
	*out = *in
	if in.SecurityLabels != nil {
		in, out := &in.SecurityLabels, &out.SecurityLabels
		*out = make([]PostgresDatabaseSpecSecurityLabels, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleSpecSecurity.
func (in *PostgresRoleSpecSecurity) DeepCopy() *PostgresRoleSpecSecurity {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleSpecSecurity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PostgresRoleStatus) DeepCopyInto(out *PostgresRoleStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PostgresRoleStatus.
func (in *PostgresRoleStatus) DeepCopy() *PostgresRoleStatus {
	if in == nil {
		return nil
	}
	out := new(PostgresRoleStatus)
	in.DeepCopyInto(out)
	return out
}
